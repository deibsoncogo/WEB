name: publish

on:
  push:
    branches:
      - prod
jobs:
  build:
    name: Deploy Production
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: "Create env file local"
        run: |
          cat <<EOF >> .env
          ${{ secrets.ENV_PRODUCTION }}
          EOF
          cp ./eks/production/Dockerfile .
      - name: "Push Docker image to registry"
        run: |
          REGISTRY_URL=137204483505.dkr.ecr.us-east-1.amazonaws.com
          TAG=$(aws ecr describe-images --repository-name tf-atpalex-site --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageTags[0]' --output text)
          TAG_IMAGE=`echo $TAG + 1 | bc`
          IMAGE="$REGISTRY_URL/tf-atpalex-site:$TAG_IMAGE"
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin $REGISTRY_URL
          docker build -t docker-image-local .
          docker tag docker-image-local:latest $IMAGE
          docker push $IMAGE
          sed -i -e "s#IMAGE_VERSION#${IMAGE}#" ./eks/production/0_deployment.yaml
      - name: "Deploy Kubernetes"
        run: |
          EKS_PATH=./eks/production
          sudo snap install kubectl --classic
          aws eks --region ${{ secrets.AWS_REGION  }} update-kubeconfig --name ${{ secrets.CLUSTER_NAME }}
          kubectl apply -f $EKS_PATH/0_deployment.yaml
          kubectl apply -f $EKS_PATH/1_service.yaml
          kubectl apply -f $EKS_PATH/2_hpa.yaml